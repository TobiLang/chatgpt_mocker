[tool.poetry]
name = 'ChatGPT Mocker'
description = "Mocking the OpenAI API using pytest-mock"
version = '1.0.0'
authors = ['Tobias Lang <tobias.lang@lanint.de>']
classifiers = [
    'Programming Language :: Python :: 3',
    'Operating System :: OS Independent',
]
readme = 'README.md'
packages = [
    { include = 'src', from = '.' }
]

[tool.poetry.dependencies]
python = '^3.8'
openai = "^0.27.2"

[tool.poetry.group.dev.dependencies]
pytest = '^7.1.3'
pytest-cov = '^3.0.0'
pytest-fixtures = '^0.1.0'
pytest-mock = '^3.10.0'
mypy = '^1.0.1'
black = '^22.8.0'
bandit = '^1.7.4'
isort = '^5.10.1'
coverage = {extras = ['toml'], version = '^6.4.4'}
pylint = '^2.15.2'
toml = '^0.10.2'
pycln = '^2.1.1'
pre-commit = '^2.20.0'

[build-system]
requires = ['poetry-core>=1.0.0']
build-backend = 'poetry.core.masonry.api'

[tool.bandit]
exclude_dirs = ['src/tests', 'venv']
[tool.bandit.assert_used]
skips = ['*/test_*.py']

[tool.black]
line-length = 120
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | frontend
)/
'''

[tool.coverage.run]
omit = ['.*', '*/test*']

[tool.coverage.report]
fail_under = 80

[tool.mypy]
python_version = '3.10'
files = 'src'
show_error_codes = true
strict = true
ignore_missing_imports = true
implicit_reexport = true
enable_error_code = [
    'ignore-without-code',
    'redundant-expr',
    'truthy-bool',
]

[tool.pydocstyle]
# Google Convention, adjusted
# See: https://www.pydocstyle.org/en/stable/error_codes.html#default-conventions
ignore = 'D200,D202,D203,D205,D212,D400,D401,D404,D406,D407,D408,D409,D413'

[tool.pycln]
all = true

[tool.pylint]
max-line-length = 120
disable = ['W0511']
good-names = ['db', 'ex']
